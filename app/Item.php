<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\File;

class Item extends Model
{
    protected $table = 'items';

    protected $fillable = ['name', 'desc', 'item_type_id', 'subject_id', 'maintainer_id', 'item_state_id','is_active'];
   
    public function getSubject()
    {
        return $this->belongsTo('App\Subject','subject_id');
    }

    public function getItem_State()
    {
        return $this->belongsTo('App\Item_State','item_state_id');
    }

    public function getMaintainer()
    {
        return $this->belongsTo('App\Maintainer','maintainer_id');
    }

    public function getItem_Type()
    {
        return $this->belongsTo('App\Item_Type','item_type_id');
    }

    public function getProject_Tools()
    {
        return $this->hasMany('App\Project_Tool','item_id');
    }

    public function getItem_Authors()
    {
        return $this->hasMany('App\Item_Author','item_id');
    }
    public function getAuthors()
    {
        $item_authors = $this->getItem_Authors;
        $author_ids = [];
        $authors =[];
        foreach ($item_authors as $item_author)
        {
            $author_ids[count($author_ids)] = $item_author['author_id'];
        }
        foreach ($author_ids as $author_id)
        {
            $authors[count($authors)] = Author::find($author_id);
        }
        return $authors;
    }

    public function getBorrowes()
    {
        return $this->hasMany('App\Borrow','item_id');
    }

    public function getTag_Items()
    {
        return $this->hasMany('App\Tag_Item','item_id');
    }
    public function getTags()
    {
        $tag_items = $this->getTag_Items;
        $tag_ids = [];
        $tags =[];
        foreach ($tag_items as $tag_item)
        {
            $tag_ids[count($tag_ids)] = $tag_item['tag_id'];
        }

        foreach ($tag_ids as $tag_id)
        {
            $tags[count($tags)] = Tag::find($tag_id);
        }
        return $tags;
    }

    public function getFavorites()
    {
        return $this->hasMany('App\Favorite','item_id');
    }

    public function getReservation()
    {
        return $this->hasOne('App\Reservation','item_id');
    }


    public function getFiles()
    {
        return $this->hasMany('App\File','item_id');
    }


    public function delete()
    {

        $files = $this -> getFiles;

        if ($files != null)
        {
            foreach ($files as $file)
            {
                File::delete('item_files/'.$file->type.'/'.$file->name);
                $file -> delete();
            }
        }

        $tag_items = $this ->getTag_Items;


        if ($tag_items != null)
        {
            foreach ($tag_items as $tag_item)
            {
                $tag_item->delete();
            }
        }

        $item_authors = $this -> getItem_Authors;

        if ($item_authors != null)
        {
            foreach ($item_authors as $item_author)
            {
                $item_author->delete();
            }
        }




        return parent ::delete(); // TODO: Change the autogenerated stub
    }


}
